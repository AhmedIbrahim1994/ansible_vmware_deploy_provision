---
- hosts: localhost
  gather_facts: False
  connection: local
  vars_files:
  - vars.yml
  vars:
    vcenter_hostname: ""
    vcenter_user: ""
    vcenter_pass: ""
    vmtemplate: ""
    vm_name: ""
    new_port: ""
    inventory_dir: ""

  tasks:
  - name: Gather Facts of all VMs in variable machines.
    local_action:
      module: vmware_vm_facts
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_user }}"
      password: "{{ vcenter_pass }}"
      validate_certs: False
    register: facts
    ignore_errors: true
  - name: Check if virtual machine name exists and Verbose UUID
    debug:
        msg: "{{ item }}: {{ facts['virtual_machines']['%s'| format(item)]['uuid'] }}"
    with_items:
    - "{{ vm_name }}"
    ignore_errors: true
  - name: Clone a VM from Template and customize
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_user }}"
      password: "{{ vcenter_pass }}"
      validate_certs: no
      datacenter: justai-lab
      cluster: cluster
      name: "{{ vm_name }}"
      state: poweredon
      template: "{{ vmtemplate }}"
      disk:
      - size_gb: 50
        type: thin
        datastore: datastore2
      hardware:
        memory_mb: 1024
        num_cpus: 2
        scsi: paravirtual
      networks:
      - name: BridgedNetwork
        type: dhcp
      - name: VM Network
        type: dhcp
      wait_for_ip_address: yes
    delegate_to: localhost
    register: deploy
    when: facts['virtual_machines']['%s'| format(item)] is not defined
    with_items:
    - "{{ vm_name }}"

  - name: Verbose newly created Virtual Machine and IP address
    debug:
      msg: "{{ deploy.instance.ipv4 }} {{ vm_name }}"
    when: deploy is not defined
    with_items:
    - "{{ vm_name }}"
    ignore_errors: true

  - name: Add VM to inventory for further tasks
    add_host:
      name: "{{ vm_name }}"
      group: created_nodes
      ansible_ssh_host: "{{ facts['virtual_machines']['%s' | format(item)]['ip_address']  }}"
      ansible_ssh_port: "{{ new_port }}"
      inventory_dir: "{{ inventory_dir }}"
    with_items:
    - "{{ vm_name }}"
#### play 2 ####

- name: Print out all hosts
  hosts: created_nodes
  gather_facts: true
  tasks:
  - name: Print out group
    debug:
      var: hostvars[inventory_hostname]
